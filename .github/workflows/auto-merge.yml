name: Auto Merge Documentation PRs

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == github.repository_owner && contains(github.head_ref, 'documentation')
    steps:
      - uses: actions/checkout@v4

      - name: Increment minor version and commit
        run: |
          cd ./src/ExpForge.Documentation.Presentation

          # Extrai a versão atual
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" ExpForge.Documentation.Presentation.csproj)
          echo "Versão atual: $VERSION"

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          MINOR=$((MINOR + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          # Atualiza o csproj
          sed -i "s#<Version>$VERSION</Version>#<Version>$NEW_VERSION</Version>#g" ExpForge.Documentation.Presentation.csproj
          echo "Nova versão: $NEW_VERSION"

          # Cria branch temporária
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b documentation-version-$NEW_VERSION

          git add ExpForge.Documentation.Presentation.csproj
          git commit -m "chore: bump minor version $NEW_VERSION [skip ci]" || echo "No changes to commit"

          git push origin documentation-version-$NEW_VERSION

      - name: Merge PR
        run: |
          # Faz merge da PR usando o gh CLI
          gh pr merge ${{ github.event.pull_request.number }} --squash --admin
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
