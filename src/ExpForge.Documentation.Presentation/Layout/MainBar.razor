@inject NavigationManager Navigation

<MudDrawer @bind-Open="Open"
           Variant="DrawerVariant.Responsive"
           Elevation="3"
           Fixed="true"
           Anchor="Anchor.Left"
           Class="pa-4 glass-drawer">

    <MudText Typo="Typo.h6" Align="Align.Center" Class="mb-2" Color="Color.Primary">
        <MudImage Src="img/icon.png" Height="50" Width="50"></MudImage> ExpForge
    </MudText>

    <MudNavMenu>
        @foreach (var item in MenuItems)
        {
            <MudButton Variant="Variant.Text"
                       StartIcon="@item.Icon"
                       Class="mb-2 nav-button"
                       Style="border-radius:10px; justify-content:flex-start; width:100%;"
                       OnClick="@(() => Navigate(item.Path, item.ForceReload))">
                @item.Title
            </MudButton>
        }
    </MudNavMenu>
</MudDrawer>

<style>
    .glass-drawer {
        width: 250px !important;
        background-color: rgba(31, 40, 51, 0.8);
        color: #E4E4E4;
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }

    .nav-button {
        color: #E4E4E4;
        text-align: center;
        text-transform: none;
    }

        .nav-button:hover {
            background-color: rgba(69, 162, 158, 0.2);
        }
</style>

@code {
    [Parameter] public bool Open { get; set; }
    [Parameter] public EventCallback<bool> OpenChanged { get; set; }

    private List<MenuItem> MenuItems = new()
    {
        new MenuItem("ExpForge", "/", Icons.Material.Filled.Home, true),
        new MenuItem("Getting Started", "/Docs/Getting-Started", Icons.Material.Filled.Person, false),
        new MenuItem("Explore", "/Docs/Explore", Icons.Material.Filled.AddCircle, false),
    };

    public record MenuItem(string Title, string Path, string Icon, bool ForceReload);

    private void Navigate(string url, bool forceReload)
    {
        Navigation.NavigateTo(url, forceReload);
    }
}
