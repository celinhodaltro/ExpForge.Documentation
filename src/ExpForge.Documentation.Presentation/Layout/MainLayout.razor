@inherits LayoutComponentBase
@using MudBlazor
@inject NavigationManager Navigation
@inject ThemeService ThemeService


<MudThemeProvider Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout Class="mud-theme-background"
           Style=@GetLayoutStyle()>

    @if(IsHome is false)
    {
        <MainBar @bind-Open="_drawerOpen" />
    }

    <MudMainContent Style="flex:1 0 auto; padding:20px;">

        @if(IsHome is false)
        {
            <MudIconButton Icon="@(_drawerOpen ? Icons.Material.Filled.MenuOpen : Icons.Material.Filled.Menu)"
                           Color="Color.Primary"
                           OnClick="ToggleDrawer"
                           class="menu-toggle"
                           Size="Size.Medium" />
        }

        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private MudTheme _theme = new();
    private string _layoutStyle = "";

    protected override void OnInitialized()
    {
        _theme = ThemeService.GetTheme();

        var uri = Navigation.Uri;
        if (uri.EndsWith("/") || uri.EndsWith("/index"))
        {
            _layoutStyle = "min-height:100vh; background: url('./img/background.png') no-repeat center center fixed; background-size: cover;";
        }
        else
        {
            _layoutStyle = "min-height:100vh; background-color:#121212;";
        }
    }
    private void ToggleDrawer() => _drawerOpen = !_drawerOpen;
    private bool IsHome => Navigation.Uri.EndsWith("/") || Navigation.Uri.EndsWith("/index");

    private string GetLayoutStyle()
    {
        if (IsHome)
            return "min-height:100vh; background: url('./img/background.png') no-repeat center center fixed; background-size: cover;";
        else
            return "min-height:100vh; background-color:white;";
    }
}