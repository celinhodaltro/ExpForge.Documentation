@inherits LayoutComponentBase
@using MudBlazor
@inject NavigationManager Navigation
@inject ThemeService ThemeService

<MudThemeProvider Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout Class="mud-theme-background" Style="@_layoutStyle">
    @if (!IsHome)
    {
        <MainBar @bind-Open="_drawerOpen" />
    }

    <MudMainContent Style="flex:1 0 auto; padding:20px;">
        @if (!IsHome)
        {
            <MudIconButton Icon="@(_drawerOpen ? Icons.Material.Filled.MenuOpen : Icons.Material.Filled.Menu)"
                           Color="Color.Primary"
                           OnClick="ToggleDrawer"
                           Class="menu-toggle"
                           Size="Size.Medium" />
        }

        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private MudTheme _theme = new();
    private string _layoutStyle = "";

    protected override void OnInitialized()
    {
        SetLayoutTheme();
        Navigation.LocationChanged += (_, _) => SetLayoutTheme();
        ThemeService.OnThemeChanged += StateHasChanged;
    }

    private void SetLayoutTheme()
    {

        _theme = IsHome ? ThemeService.GetHomeTheme() : ThemeService.GetDefaultTheme();
        _layoutStyle = IsHome
                    ? "min-height:100vh; background: url('./img/background.png') no-repeat center center fixed; background-size: cover;"
                    : "min-height:100vh; background-color:#white;";
        InvokeAsync(StateHasChanged);
    }

    private bool IsHome => !Navigation.Uri.Contains("Docs");
    private void ToggleDrawer() => _drawerOpen = !_drawerOpen;
}
